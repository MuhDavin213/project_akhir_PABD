<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>